// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String   @id @unique @default(uuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  phone         String?       
  linkedin      String?        
  github        String?
  image         String?   
  skills        String?
  address       String?
  city          String?
  postcode      String?
  country       String?
  role          Role           @default(APPLICANT)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  offers        UsersOnOffers[]
  hadApplied    Offer[]  @relation("user_applied_to_offer")
  cv          String?
  coverletter String?
   accounts      Account[]
  sessions      Session[]
 
}




model Offer {

  id            String   @id @unique @default(uuid())
  title         String
  contractType  String
  location      String         
  description   String       
  skills        String?
  salary        String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  users         UsersOnOffers[]
  hadApplied    User[]   @relation("user_applied_to_offer")
  company    Company? @relation(fields: [companyId], references: [id])
  companyId  String?

  
 
}

model UsersOnOffers {
  user      User  @relation(fields: [userId], references: [id])
  userId     String 
  offer   Offer  @relation(fields: [offerId], references: [id])
  offerId  String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, offerId])


}
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}




model Company{
  id            String   @id @unique @default(uuid())
  website       String?
  name          String
  address       String
  city          String
  postcode      String?
  country       String
  imageUrl      String?
  description   String?
  offers       Offer[]
}

enum Role {
  ADMIN
  APPLICANT
  CONSULTANT
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


